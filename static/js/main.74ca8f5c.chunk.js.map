{"version":3,"sources":["Components/ContactList/ContactListItem/ContactListItem.module.css","Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/slices/contacts.js","redux/slices/filter.js","redux/contacts/contactsSlise.js","redux/store.js","Components/Form/Form.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","id","number","reducers","addContact","state","action","payload","deleteContact","filter","contact","actions","filterSlice","filterContact","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllContacts","query","providesTags","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useGetAllContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","devTools","Form","data","useState","setName","setNumber","handleInputChange","event","currentTarget","value","reset","uniqueIdName","uuid","uniqueIdNumber","onSubmit","e","preventDefault","addedNewContact","map","includes","trim","alert","htmlFor","className","s","formLabel","type","pattern","title","required","onChange","formInput","formBtn","ContactListItem","onDelete","contactItem","contactName","contactNumber","deleteContactBtn","onClick","ContactList","isFetching","useSelector","dispatch","useDispatch","contactsList","filterToLowerCase","toLocaleLowerCase","handleInputFilter","Filter","filterInputLabel","filterInput","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,qCAAqC,YAAc,qCAAqC,iBAAmB,4C,mBCA3ID,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,YAAc,8B,mBCApFD,EAAOC,QAAU,CAAC,aAAe,oC,oJCC3BC,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAAc,CACZ,CAAEC,GAAI,OAAQF,KAAM,gBAAiBG,OAAQ,aAC7C,CAAED,GAAI,OAAQF,KAAM,iBAAkBG,OAAQ,aAC9C,CAAED,GAAI,OAAQF,KAAM,gBAAiBG,OAAQ,aAC7C,CAAED,GAAI,OAAQF,KAAM,iBAAkBG,OAAQ,cAEhDC,SAAU,CACRC,WAAY,SAACC,EAAOC,GAAR,4BAAuBD,GAAvB,CAA8BC,EAAOC,WACjDC,cAAe,SAACH,EAAOC,GAAR,OACbD,EAAMI,QAAO,SAACC,GAAD,OAAaA,EAAQT,KAAOK,EAAOC,eAI/C,EAAsCV,EAAcc,QAAhCH,GAApB,EAAQJ,WAAR,EAAoBI,eACZX,IAAf,QChBMe,EAAcd,YAAY,CAC9BC,KAAM,WACNC,aAAc,GACdG,SAAU,CACRU,cAAe,SAACR,EAAOC,GAAR,OAAmBA,EAAOC,YAI9BM,EAAkBD,EAAYD,QAA9BE,cACAD,IAAf,Q,eCTaE,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,SAAU,CAAC,WACXC,UAAW,SAACC,GAAD,MAAc,CACvBC,eAAgBD,EAAQE,MAAM,CAC5BA,MAAO,8BACPC,aAAc,CAAC,aAEjBjB,cAAec,EAAQI,SAAS,CAC9BF,MAAO,SAACG,GAAD,MAAgB,CACrBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAEpBC,cAAeT,EAAQI,SAAS,CAC9BF,MAAO,SAACQ,GAAD,MAAiB,CACtBJ,IAAK,YACLC,OAAQ,OACRI,KAAM,CACJlC,KAAMiC,EAAWjC,KACjBG,OAAQ8B,EAAW9B,UAGvB4B,gBAAiB,CAAC,iBAMtBI,EAGEpB,EAHFoB,uBACAC,EAEErB,EAFFqB,yBACAC,EACEtB,EADFsB,yBC9BWC,EAAQC,YAAe,CAClCC,QAAQ,aACNC,WACA/B,UACCK,EAAYE,YAAcF,EAAYyB,SAEzCE,WAAY,SAACC,GAAD,4BACPA,KADO,CAEV5B,EAAY2B,cAEdE,UAAU,I,8CCTG,SAASC,IACtB,MAAwBR,IAAjBL,EAAP,oBACcS,EAAaN,IAAnBW,KACR,EAAwBC,mBAAS,IAAjC,mBAAO/C,EAAP,KAAagD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO5C,EAAP,KAAe8C,EAAf,KAEMC,EAAoB,SAACC,GACzB,MAAwBA,EAAMC,cAAtBpD,EAAR,EAAQA,KAAMqD,EAAd,EAAcA,MAEd,OAAQrD,GACN,IAAK,OACHgD,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAuBAC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGNM,EAAeC,cACfC,EAAiBD,cAEvB,OACE,uBAAME,SA5Ba,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAkB,CACtB7D,OACAG,UAGF,OAAIsC,EAASqB,KAAI,SAACnD,GAAD,OAAaA,EAAQX,QAAM+D,SAAS/D,EAAKgE,QACjDC,MAAM,IAAD,OAAKjE,EAAKgE,OAAV,6BACVvB,EAASqB,KAAI,SAACnD,GAAD,OAAaA,EAAQR,UAAQ4D,SAAS5D,EAAO6D,QACrDC,MAAM,iBAAD,OAAkB9D,EAAO6D,OAAzB,8BAIdhC,EAAc6B,QAEdP,MAYA,UACE,uBAAOY,QAASX,EAAcY,UAAWC,IAAEC,UAA3C,kBAGA,uBACA,uBACEnE,GAAIqD,EACJe,KAAK,OACLtE,KAAK,OACLqD,MAAOrD,EACPuE,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUxB,EACViB,UAAWC,IAAEO,YAEf,uBACA,uBAAOT,QAAST,EAAgBU,UAAWC,IAAEC,UAA7C,oBAGA,uBACA,uBACEnE,GAAIuD,EACJa,KAAK,MACLtE,KAAK,SACLqD,MAAOlD,EACPoE,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUxB,EACViB,UAAWC,IAAEO,YAEf,uBACA,wBAAQL,KAAK,SAASH,UAAWC,IAAEQ,QAAnC,oB,qBC7DSC,EAzBS,SAAC,GAAoC,IAAlC3E,EAAiC,EAAjCA,GAAIF,EAA6B,EAA7BA,KAAMG,EAAuB,EAAvBA,OACnC,GAD0D,EAAf2E,SACnB1C,KAAjB3B,EAAP,oBACA,OACE,qBAAI0D,UAAWC,IAAEW,YAAjB,UACE,oBAAGZ,UAAWC,IAAEY,YAAhB,UACGhF,EADH,KACU,sBAAMmE,UAAWC,IAAEa,cAAnB,SAAmC9E,OAE7C,wBACEgE,UAAWC,IAAEc,iBACbZ,KAAK,SACLa,QAAS,kBAAM1E,EAAcP,IAH/B,wB,iBC0BSkF,EA9BK,WAClB,MAAuCjD,IAAzBM,EAAd,EAAQK,KAAgBuC,EAAxB,EAAwBA,WAClBhC,EAAQiC,aAAY,SAAChF,GAAD,OAAWA,EAAMI,UACrC6E,EAAWC,cAUjB,OACE,qBAAIrB,UAAWC,IAAEqB,aAAjB,UACGJ,GAAc,wDACd5C,GAXqB,SAACA,EAAU/B,GACnC,IAAMgF,EAAiB,OAAGhF,QAAH,IAAGA,OAAH,EAAGA,EAAQiF,oBAAoB3B,OAEtD,cAAOvB,QAAP,IAAOA,OAAP,EAAOA,EAAU/B,QAAO,SAACC,GAAD,cACtBA,QADsB,IACtBA,OADsB,EACtBA,EAASX,KAAK2F,oBAAoB3B,OAAOD,SAAS2B,MAQhDE,CAAkBnD,EAAUY,GAAOS,KAAI,SAACnD,GAAD,OACrC,cAAC,EAAD,CAEET,GAAIS,EAAQT,GACZF,KAAMW,EAAQX,KACdG,OAAQQ,EAAQR,OAChB2E,SAAU,kBAAMS,EAAS9E,EAAcE,EAAQT,OAJ1CS,EAAQT,W,yBCDV2F,EApBA,WACb,IAAMN,EAAWC,cACXnC,EAAQiC,aAAY,SAAChF,GAAD,OAAWA,EAAMI,UAE3C,OACE,qCACE,uBAAOyD,UAAWC,IAAE0B,iBAApB,mCACA,uBACA,uBACE3B,UAAWC,IAAE2B,YACbzB,KAAK,OACLtE,KAAK,SACLqD,MAAOA,EACPqB,SAAU,SAACf,GAAD,OAAO4B,EAASzE,EAAc6C,EAAEqC,OAAO3C,SACjD4C,YAAY,gBCfL,SAASC,IACtB,OACE,sBAAK/B,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,cAACtB,EAAD,IACA,uBACA,cAAC,EAAD,OAEF,sBAAKsB,UAAU,kBAAf,UACE,oBAAIA,UAAU,uBAAd,sBACA,cAAC,EAAD,UChBR,IAYegC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJyE,SAASC,eAAe,SAM1Bb,K,kBCnBAvG,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,yB","file":"static/js/main.74ca8f5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__2tTbV\",\"contactName\":\"ContactListItem_contactName__3lmif\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__1XzRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__2Kv_B\",\"filterInput\":\"Filter_filterInput__1R4Gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__sKD3E\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\", // прописываем название ключа в хранилище\r\n  initialState: [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  reducers: {\r\n    addContact: (state, action) => [...state, action.payload],\r\n    deleteContact: (state, action) =>\r\n      state.filter((contact) => contact.id !== action.payload),\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"contacts\", // прописываем название ключа в хранилище\r\n  initialState: \"\",\r\n  reducers: {\r\n    filterContact: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { filterContact } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://618edec450e24d0017ce14ae.mockapi.io/api/v1/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: (builder) => ({\r\n    getAllContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: (newContact) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: {\r\n          name: newContact.name,\r\n          number: newContact.number,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contacts from \"../redux/slices/contacts\";\r\nimport filter from \"../redux/slices/filter\";\r\nimport { contactsApi } from \"./contacts/contactsSlise\";\r\n\r\n// const middleware = [...getDefaultMiddleware()];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts,\r\n    filter,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n  devTools: true,\r\n});\r\n","import { useState } from \"react\";\r\nimport {\r\n  useCreateContactMutation,\r\n  useGetAllContactsQuery,\r\n} from \"../../redux/contacts/contactsSlise\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form() {\r\n  const [createContact] = useCreateContactMutation();\r\n  const { data: contacts } = useGetAllContactsQuery();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const addedNewContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\r\n      return alert(`\"${name.trim()}\" is already in contacts`);\r\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\r\n      return alert(`phone number \"${number.trim()}\" is already in contacts`);\r\n\r\n    // onSubmit(addedNewContact);\r\n    // dispatch(addContact(addedNewContact));\r\n    createContact(addedNewContact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const uniqueIdName = uuid();\r\n  const uniqueIdNumber = uuid();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor={uniqueIdName} className={s.formLabel}>\r\n        Name\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <label htmlFor={uniqueIdNumber} className={s.formLabel}>\r\n        Number\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\nimport { useDeleteContactMutation } from \"../../../redux/contacts/contactsSlise\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  return (\r\n    <li className={s.contactItem}>\r\n      <p className={s.contactName}>\r\n        {name}: <span className={s.contactNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={s.deleteContactBtn}\r\n        type=\"button\"\r\n        onClick={() => deleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { deleteContact } from \"../../redux/actions/actions\";\r\nimport { deleteContact } from \"../../redux/slices/contacts\";\r\nimport { useGetAllContactsQuery } from \"../../redux/contacts/contactsSlise\";\r\n\r\nconst ContactList = () => {\r\n  const { data: contacts, isFetching } = useGetAllContactsQuery();\r\n  const value = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputFilter = (contacts, filter) => {\r\n    const filterToLowerCase = filter?.toLocaleLowerCase().trim();\r\n\r\n    return contacts?.filter((contact) =>\r\n      contact?.name.toLocaleLowerCase().trim().includes(filterToLowerCase)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {isFetching && <h4>Loading, please wait..</h4>}\r\n      {contacts &&\r\n        handleInputFilter(contacts, value).map((contact) => (\r\n          <ContactListItem\r\n            key={contact.id}\r\n            id={contact.id}\r\n            name={contact.name}\r\n            number={contact.number}\r\n            onDelete={() => dispatch(deleteContact(contact.id))}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n// import { filterContact } from \"../redux/actions/actions\";\r\nimport { filterContact } from \"../redux/slices/filter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector((state) => state.filter);\r\n\r\n  return (\r\n    <>\r\n      <label className={s.filterInputLabel}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterContact(e.target.value))}\r\n        placeholder=\"Contact\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Form from \"./Components/Form/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport \"./App.css\";\nimport Filter from \"./Filter/Filter\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"InputWrapper\">\n        <h1 className=\"inputTitle\">Phonebook</h1>\n        <Form />\n        <br />\n        <Filter />\n      </div>\n      <div className=\"contactsSection\">\n        <h2 className=\"contactsSectionTitle\">Contacts</h2>\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Form_formLabel__3Sj3b\",\"formInput\":\"Form_formInput__3c57Y\",\"formBtn\":\"Form_formBtn__2lNew\"};"],"sourceRoot":""}